# Template file for 'monero-gui'
pkgname=monero-gui
version=0.18.4.3
revision=1
_monero_version=0.18.4.3
_randomx_gitrev="102f8acf90a7649ada410de5499a7ec62e49e1da"
_rapidjson_gitrev="129d19ba7f496df5e33658527a7158c79b99c21c"
_supercop_gitrev="633500ad8c8759995049ccd022107d1fa8a1bbc9"
_quirc_gitrev="7e7ab596e4d0988faf1c12ae89c354b114181c40"
_miniupnp_gitrev="544e6fcc73c5ad9af48a8985c94f0f1d742ef2e0"
build_style=cmake
configure_args="-DVERSION_IS_RELEASE=true -DQt5_LRELEASE_EXECUTABLE=/usr/bin/lrelease"
hostmakedepends="pkg-config qt5-tools qt5-qmake qt5-quickcontrols qt5-declarative-devel qt5-svg-devel qtchooser git"
makedepends="boost-devel libunwind-devel miniupnpc-devel qt5-declarative-devel readline-devel unbound-devel libsodium-devel hidapi-devel qt5-svg-devel libgcrypt-devel zeromq-devel protobuf-devel"
depends="qt5-graphicaleffects qt5-quickcontrols qt5-quickcontrols2 qt5-xmlpatterns"
short_desc="GUI for the core Monero implementation"
maintainer="Jason Elswick <jason@jasondavid.us>"
license="BSD-3-Clause"
homepage="https://getmonero.org"
distfiles="https://github.com/monero-project/monero-gui/archive/refs/tags/v${version}.tar.gz
 https://github.com/monero-project/monero/archive/refs/tags/v${_monero_version}.tar.gz>monero-v${_monero_version}.tar.gz
 https://github.com/tevador/RandomX/archive/${_randomx_gitrev}.tar.gz 
 https://github.com/Tencent/rapidjson/archive/${_rapidjson_gitrev}.tar.gz
 https://github.com/monero-project/supercop/archive/${_supercop_gitrev}.tar.gz 
 https://github.com/dlbeer/quirc/archive/${_quirc_gitrev}.tar.gz
 https://github.com/miniupnp/miniupnp/archive/${_miniupnp_gitrev}.tar.gz"
checksum="c4ae288115954cd510e5a1bfa5adff91fccd57266e63b804bdbeb1410a172bf2
 fdec15d2b5c40f70aa4115aae8839ea9a247e3186c73f2d854432c7badafc939
 91bf75a91614e433194b7cd46248775576d0c82fccc2396d37b3375fc86513e7
 44b007d419ac21b6affec58991e865ee572346ead19b73cf1c3e4e11c7a81273
 b973b9d8269ec4d97c3c3443f0dad96d09f72b1b30e616e0947557adbdbb03f7
 c8366aecb6ba48ec50a7e579a4fa18eb55c3c4be7d3efb2a83726157977f4ca6
 43de1b5ec5fa052973e12e70ea93d19297733225ce71314b712cb8a18fba9ad7"
skip_extraction="monero-v${_monero_version}.tar.gz ${_rapidjson_gitrev}.tar.gz ${_supercop_gitrev}.tar.gz ${_randomx_gitrev}.tar.gz ${_quirc_gitrev}.tar.gz ${_miniupnp_gitrev}.tar.gz"

if [ "$XBPS_TARGET_NO_ATOMIC8" ]; then
	makedepends+=" libatomic-devel"
	CFLAGS+=" -latomic"
fi

case "$XBPS_TARGET_MACHINE" in
	*-musl) configure_args+=" -DSTACK_TRACE=OFF"
esac

case "$XBPS_TARGET_MACHINE" in
	armv7*) configure_args+=" -DARCH=armv7" ;;
	armv6*) configure_args+=" -DARCH=armv6" ;;
	armv5*) configure_args+=" -DARCH=armv5" ;;
	aarch64*) configure_args+=" -DARCH=aarch64" ;;
	mips*) configure_args+=" -DARCH=mipsr32 -DNO_AES=ON" ;;
	ppc64le*) configure_args+=" -DARCH=ppc64le" ;;
	ppc64*) configure_args+=" -DARCH=ppc64" ;;
	ppc*) configure_args+=" -DARCH=ppc"     ;;
	*) configure_args+=" -DARCH=default" ;;
esac

post_extract() {
	vsrcextract -C ${wrksrc}/monero monero-v${_monero_version}.tar.gz
	vsrcextract -C ${wrksrc}/monero/external/rapidjson ${_rapidjson_gitrev}.tar.gz
	vsrcextract -C ${wrksrc}/monero/external/supercop ${_supercop_gitrev}.tar.gz
	vsrcextract -C ${wrksrc}/monero/external/randomx ${_randomx_gitrev}.tar.gz
	vsrcextract -C ${wrksrc}/external/quirc ${_quirc_gitrev}.tar.gz
	vsrcextract -C ${wrksrc}/monero/external/miniupnp ${_miniupnp_gitrev}.tar.gz
}

#post_patch() {
#	cd monero
#	for f in "${FILESDIR}"/*.patch; do
#		echo "Applying $f"
#		patch -Np1 -i "$f"
#	done
#}

pre_configure() {
	echo "var GUI_VERSION = \"${version}\"" > version.js
	echo "var GUI_MONERO_VERSION = \"${version}\"" >> version.js
	if [ "$XBPS_TARGET_NO_ATOMIC8" ]; then
		vsed -i monero/CMakeLists.txt -e \
			'/if(ANDROID)/i list(APPEND EXTRA_LIBRARIES libatomic.a)'
	fi
}

pre_build() {
	cd src/zxcvbn-c
	cmake .
	cd ../..
	if [ "$CROSS_BUILD" ]; then
		# The dictgen binary is executed during the build to generate code
		# but is not included in the binary package. It thus needs to be
		# built for the host
		CXX=${CXX_host} CXXFLAGS="${XBPS_CXXFLAGS}" LDFLAGS="${XBPS_LDFLAGS}" \
			make ${makejobs} -C src/zxcvbn-c
		# The generate_translations_header binary is executed during the build
		# but is not included in the binary package. It thus needs to be
		# built for the host
		CC=${CC_host} CFLAGS="${XBPS_CFLAGS}" LDFLAGS="${XBPS_LDFLAGS}" \
			ninja -C build ${makejobs} generate_translations_header

	fi
	make ${makejobs} -C src/zxcvbn-c
}

do_install() {
	vbin build/bin/monero-wallet-gui
	vlicense LICENSE
}
